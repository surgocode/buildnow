{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/Plugins/Random note 2/",
    "result": {"data":{"mdx":{"id":"1f66c9c8-2818-54ca-afe6-513c00cf2c33","tableOfContents":{},"fields":{"title":"Random Note 2","slug":"/Plugins/Random note 2/","url":"https://buildtest.surgo.info/Plugins/Random note 2/","editUrl":"https://github.com/surgocode/buildnow/tree/main/Plugins/Random note 2.md","lastUpdatedAt":"2023-10-10T20:38:24.000Z","lastUpdated":"10/10/2023","gitCreatedAt":"2023-10-10T20:38:24.000Z","shouldShowTitle":true},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Random note does just that, opens a note at random from your Vault. Many people find this useful for surfacing thoughts they had not considered in a long time, or spot checking for things that they may have forgotten to link.\"), mdx(\"p\", null, \"After you enable the Random Note plugin, you can create a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Customization/Custom%20hotkeys/\",\n    \"title\": \"custom hotkey\"\n  }, \"custom hotkey\"), \" that opens a note at random.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"Random note does just that, opens a note at random from your Vault. Many people find this useful for surfacing thoughts they had not considered in a long time, or spot checking for things that they may have forgotten to link.\n\nAfter you enable the Random Note plugin, you can create a [[Custom hotkeys|custom hotkey]] that opens a note at random.","excerpt":"Random note does just that, opens a note at random from your Vault. Many people find this useful for surfacing thoughts they had not considâ€¦","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Most hotkeys are customizable in Obsidian.\"), mdx(\"p\", null, \"We only defined default hotkeys for the most commonly used commands, but if you frequently use a command, it would save you lots of time if you add a hotkey for it.\"), mdx(\"p\", null, \"For a list of default hotkeys, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/How%20to/Keyboard%20shortcuts/\",\n    \"title\": \"see here\"\n  }, \"see here\"), \".\"), mdx(\"h3\", {\n    \"id\": \"viewing-hotkeys\"\n  }, \"Viewing hotkeys\"), mdx(\"p\", null, \"The fastest way to see the hotkey set for a command is to find the command in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Plugins/Command%20palette/\",\n    \"title\": \"Command palette\"\n  }, \"Command palette\"), \". If there's a hotkey listed for that command, it's set.\"), mdx(\"h3\", {\n    \"id\": \"setting-hotkeys\"\n  }, \"Setting hotkeys\"), mdx(\"p\", null, \"To add a hotkey, remove a hotkey, or restore hotkeys to default, go to Settings => Hotkeys. Note that you can also filter the list, as the list of commands is quite long.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Customization/Custom hotkeys/","title":"Custom Hotkeys","shouldShowTitle":true}}],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/Plugins/Random note 2/","sidebarItems":[{"title":"","items":[{"title":"Recently Updated","url":"/latest/","collapse":true,"indent":false,"items":[{"title":"12-09: Deleting Files Copy","url":"/ThisOne/Deleting files copy/"},{"title":"12-09: Deleting Files","url":"/ThisOne/Deleting files/"},{"title":"12-09: Accepted File Formats2222","url":"/AdvancedTopics2/Accepted file formats2222/"},{"title":"12-09: Contributing to Obsidian","url":"/AdvancedTopics2/Contributing to Obsidian/"},{"title":"12-09: Customizing CSS","url":"/AdvancedTopics2/Customizing CSS/"},{"title":"12-09: Deleting Files","url":"/AdvancedTopics2/Deleting files/"},{"title":"12-09: Drag and Drop","url":"/AdvancedTopics2/Drag and Drop/"},{"title":"12-09: HTML Sanitization","url":"/AdvancedTopics2/HTML sanitization/"},{"title":"12-09: How Obsidian Stores Data","url":"/AdvancedTopics2/How Obsidian stores data/"},{"title":"12-09: Insider Builds","url":"/AdvancedTopics2/Insider builds/"}]}]},{"title":"Tags","items":[]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/ThisOne/Deleting files copy/","title":"Deleting Files Copy","lastUpdatedAt":"2023-12-09T00:28:46.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/ThisOne/Deleting files/","title":"Deleting Files","lastUpdatedAt":"2023-12-09T00:12:59.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/Accepted file formats2222/","title":"Accepted File Formats2222","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/Contributing to Obsidian/","title":"Contributing to Obsidian","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/Customizing CSS/","title":"Customizing CSS","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/Deleting files/","title":"Deleting Files","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/Drag and Drop/","title":"Drag and Drop","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/HTML sanitization/","title":"HTML Sanitization","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/How Obsidian stores data/","title":"How Obsidian Stores Data","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/Insider builds/","title":"Insider Builds","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}