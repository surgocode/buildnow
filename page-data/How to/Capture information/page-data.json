{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/How to/Capture information/",
    "result": {"data":{"mdx":{"id":"afa8c829-392c-5394-9d7f-caaf5b7cedef","tableOfContents":{},"fields":{"title":"Capture Information","slug":"/How to/Capture information/","url":"https://buildtest.surgo.info/How to/Capture information/","editUrl":"https://github.com/surgocode/buildnow/tree/main/How to/Capture information.md","lastUpdatedAt":"2021-09-01T22:25:52.000Z","lastUpdated":"9/1/2021","gitCreatedAt":"2021-09-01T22:25:52.000Z","shouldShowTitle":true},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"copy-and-paste\"\n  }, \"Copy and paste\"), mdx(\"p\", null, \"When you see something useful online, you can simply select the text, copy, and paste in Obsidian. Obsidian will try to convert it into proper Markdown so that it fits right in.\"), mdx(\"p\", null, \"If you only wish to copy the text without the formatting, please use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl-Shift-V\"), \" on Windows and Linux and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Cmd-Shift-V\"), \" on macOS to do so.\"), mdx(\"h3\", {\n    \"id\": \"use-a-clipper-extension\"\n  }, \"Use a clipper extension\"), mdx(\"p\", null, \"Because Obsidian accepts any Markdown file, you can clip entire web pages by clipping to Markdown files and downloading them into your vault.\"), mdx(\"p\", null, \"death_au's \\\"MarkDownload\\\" browser extension works well for this purpose. You can get it for:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://chrome.google.com/webstore/detail/markdownload-markdown-web/pcmpcfapbekmbjjkdalcgopdkipoggdi\"\n  }, \"Google Chrome\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://addons.mozilla.org/en-GB/firefox/addon/markdownload/\"\n  }, \"Firefox\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://microsoftedge.microsoft.com/addons/detail/markdownload-markdown-w/hajanaajapkhaabfcofdjgjnlgkdkknm\"\n  }, \"Microsoft Edge\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"### Copy and paste\n\nWhen you see something useful online, you can simply select the text, copy, and paste in Obsidian. Obsidian will try to convert it into proper Markdown so that it fits right in.\n\nIf you only wish to copy the text without the formatting, please use `Ctrl-Shift-V` on Windows and Linux and `Cmd-Shift-V` on macOS to do so.\n\n### Use a clipper extension\n\nBecause Obsidian accepts any Markdown file, you can clip entire web pages by clipping to Markdown files and downloading them into your vault.\n\ndeath_au's \"MarkDownload\" browser extension works well for this purpose. You can get it for:\n\n- [Google Chrome](https://chrome.google.com/webstore/detail/markdownload-markdown-web/pcmpcfapbekmbjjkdalcgopdkipoggdi)\n- [Firefox](https://addons.mozilla.org/en-GB/firefox/addon/markdownload/)\n- [Microsoft Edge](https://microsoftedge.microsoft.com/addons/detail/markdownload-markdown-w/hajanaajapkhaabfcofdjgjnlgkdkknm)\n","excerpt":"Copy and paste When you see something useful online, you can simply select the text, copy, and paste in Obsidian. Obsidian will try to convâ€¦","outboundReferences":[],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/How to/Capture information/","sidebarItems":[{"title":"","items":[{"title":"Recently Updated","url":"/latest/","collapse":true,"indent":false,"items":[{"title":"12-09: Deleting Files Copy","url":"/ThisOne/Deleting files copy/"},{"title":"12-09: Deleting Files","url":"/ThisOne/Deleting files/"},{"title":"12-09: Accepted File Formats2222","url":"/AdvancedTopics2/Accepted file formats2222/"},{"title":"12-09: Contributing to Obsidian","url":"/AdvancedTopics2/Contributing to Obsidian/"},{"title":"12-09: Customizing CSS","url":"/AdvancedTopics2/Customizing CSS/"},{"title":"12-09: Deleting Files","url":"/AdvancedTopics2/Deleting files/"},{"title":"12-09: Drag and Drop","url":"/AdvancedTopics2/Drag and Drop/"},{"title":"12-09: HTML Sanitization","url":"/AdvancedTopics2/HTML sanitization/"},{"title":"12-09: How Obsidian Stores Data","url":"/AdvancedTopics2/How Obsidian stores data/"},{"title":"12-09: Insider Builds","url":"/AdvancedTopics2/Insider builds/"}]}]},{"title":"Tags","items":[]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/ThisOne/Deleting files copy/","title":"Deleting Files Copy","lastUpdatedAt":"2023-12-09T00:28:46.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/ThisOne/Deleting files/","title":"Deleting Files","lastUpdatedAt":"2023-12-09T00:12:59.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/Accepted file formats2222/","title":"Accepted File Formats2222","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/Contributing to Obsidian/","title":"Contributing to Obsidian","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/Customizing CSS/","title":"Customizing CSS","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/Deleting files/","title":"Deleting Files","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/Drag and Drop/","title":"Drag and Drop","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/HTML sanitization/","title":"HTML Sanitization","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/How Obsidian stores data/","title":"How Obsidian Stores Data","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/AdvancedTopics2/Insider builds/","title":"Insider Builds","lastUpdatedAt":"2023-12-09T00:06:32.000Z","lastUpdated":"12/9/2023"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}